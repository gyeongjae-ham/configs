call plug#begin('~/.vim/plugged')
Plug 'folke/tokyonight.nvim'
Plug 'catppuccin/nvim', { 'as': 'catppuccin' } 
Plug 'nvim-treesitter/nvim-treesitter'
Plug 'vim-airline/vim-airline'
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'pangloss/vim-javascript'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'yaegassy/coc-intelephense', {'do': 'yarn install --frozen-lockfile'}
Plug 'tpope/vim-fugitive'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'psliwka/vim-smoothie'
Plug 'machakann/vim-highlightedyank'
call plug#end()

if has("syntax")
	syntax on
endif

set timeoutlen=150
set clipboard=unnamedplus

" ; set
nnoremap ; :
vnoremap ; :
let mapleader= ","

" easymotion insert
map <leader>s <Plug>(easymotion-s)

" multi cursor set
map <C-N>  <A-N>
map <C-P>  <A-P>
map <C-X>  <A-X>
map g<C-N> g<A-N>

" NERDTree
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" fugitive(git)
nnoremap <space>ga :Git add %<TAB><Cr>
nnoremap <space>gs :G status<CR>
nnoremap <space>gc :G commit -m
nnoremap <space>gl :G log<CR>
nnoremap <space>gb :Git branch<Space>
nnoremap <space>go :Git checkout<Space>

" split window
nnoremap <M-1> :vs<CR>
nnoremap <M-2> :sp<CR>

" move cursor when window is split
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-K> <C-W>k
nnoremap <C-J> <C-W>j

" select configuration
nnoremap <leader>d vi"
nnoremap <leader>e va'
nnoremap <leader>r vi(
nnoremap <leader>t vi{
nnoremap <leader>v viw
nnoremap <leader>x <S-V>x

" move cursor
nnoremap <leader>a ^
nnoremap <leader>f $
vnoremap <leader>a ^
vnoremap <leader>f $

" common configuration
vnoremap <leader>n :norm 

" cancel find result
nnoremap <leader>c :nohlsearch<CR>

" vim configuration
set hlsearch
set nu
set rnu
set autoindent
set ts=2
set sts=2
set cindent
set laststatus=2
set shiftwidth=2
set showmatch
set smartcase
set smarttab
set smartindent
set ruler
set fileencodings=utf8,euc-kr

set t_Co=256
set cursorline

colorscheme tokyonight-day
"colorscheme catppuccin-latte

let g:transparent_groups = ['Normal', 'Comment', 'Constant', 'Special', 'Identifier',
                            \ 'Statement', 'PreProc', 'Type', 'Underlined', 'Todo', 'String',
                            \ 'Function', 'Conditional', 'Repeat', 'Operator', 'Structure',
                            \ 'LineNr', 'NonText', 'SignColumn', 'CursorLineNr', 'EndOfBuffer']

let g:airline_theme='catppuccin'
let g:lightline = { 'colorscheme': 'tokyonight-style' }
